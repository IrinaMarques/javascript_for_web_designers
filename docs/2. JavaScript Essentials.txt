--------------
2.1 Variables
--------------
1. Variables
To declare a variable start with var.

Then identifiers have specifc rules they can contain letters, digits, underscores and dollar signs, they must begin with the letter.

Names are case sensitive - bob it's not the same as Bob
Reserved keywords from JavaScript are prohibited from being used as identifiers

var item,
    item2;

2. Values
Can specify a value

item = 5;
item2 = "Hello!";

Variables have something called a scope. Referes to the context in which these variables are available. 
In the previous case - item item2 - they have a global scope, they are available globally.

Later we'll see that it's possible to create a local scope inside, for example, a function or a specific block of code. in that case the variable which has local scope is only available within that function or that block of code.


---------------
2.2 Data Types
---------------

There are 7 data types in total:
- 5 primary 
- 2 composit

Primary:
- string - group of characters
- number
- boolean - can only hold two values - True or False
- null - single value that is null, it's used to erase the contents of a variable without deleting the variable itself
- undefined - when we trying to access an object property that doesn't exist or trying to access a variable that has not been given a value

The typeof operator - nice way of checking the type of variable
In the console on the beowser we write ex. 
typeof false - and will give "boolean"
typeof carModel - "undefined"
typeof name - "string"
typeof "false" - "string"
typeof age - "object" 

-----------
2.3 Arrays
-----------

Array it's a first "composite" data type in JavaScript.

Array it's a list of values.

In the console we write:
list
list2
list3

The lists goes from 0 to 4.
In the console we write:
list[0] --> "John"
list[2] --> "Sander"
list[5] --> undefined
list[4] --> false

Arrays have: 
- Properties
- Methods.

Properties - length property give you the number of items of that array
In the console we write:
list.length --> 5
list2.length --> 0
list3.length --> 2

Methods:
- push - add an item to the end of an array
- pop - remove one item from the end of the array
- shift - remove an item from the front or the start of an array
- unshift - add to the front of an array
- indexOf - to find the index of a specific item in an array

Ex. - push
In the console we write:
list.push("Hi!") --> 6
list --> Array["John", "Marie", "Sander", 32, false, "Hi!"]

Ex. - pop
In the console we write:
list.pop() --> "Hi!"
list --> Array["John", "Marie", "Sander", 32, false]

Ex. - shift
In the console we write:
list.shift() --> "John"
list --> Array["Marie", "Sander", 32, false]

Ex. - unshift
In the console we write:
list.unshift(10) --> "5"
list --> Array[10, "John", "Marie", "Sander", 32, false]

Ex. - indexOf
In the console we write:
list.indexOf(32) --> "3"

-----------
2.4 Objects
-----------

Objects is the second "composite" data type in JavaScript.

Starts with the understanding of "properties" - association between a name and a value. Ex. color = red

Can also have functions as values in which case those properties - called methods.

Objects are collection of properties.

We set the variables as the properties and then we go to the console and type:
person --> Object {name: "Kirk", age: 43, height: 1.76, married: true}

We can use objects inside objects in a way that an object is the value for a property.

In the console:
person --> 
Object {name: "Kirk", age: 43, height: 1.76, married: true, car: Object}

person.car
 --> Object {make: "Honda"}

person.car.make --> 
"Honda"

--------------
2.5 Operators
--------------

There are a few different types.

1. Assignment operator:
Assign a value to its left operand based on the value of its right operand. 

Equal assignment - equal operator =
ex. x = y;

Addition assignment - addition operator
ex. x = x + y;
or  x += y;

Subtraction assignment
ex. x -=y;
or  x = x - y;

Multiplication assignment
ex. x *= y;
or  x = x * y;

Division assignment
ex. x /= y;
or  x = x / y;

Other assignments

2. Comparison and logical operators:
Compare its operands and return a value based on the result of that comparison.
If the comparison is true --> true
If the comparison is false --> false

2.1 Comparison operators:
- Equals to --> x == y (just compare the value)
- Not equal --> x != y
- Strict equal --> x === y (considers the operand type)
- Greater than --> x > y 
- Smaller than --> x < y

2.2 Logical operators:
- and --> x && y
- or --> x || y
- not --> !x (not x)

3. Arithmetic operators:

Increment operator: 
Unary operator - only needs one operand.
Add one to its operand.
x=3
3
x++ (first print x and them increment by one)
3
x 
4
++x (first increment it then print it) 
5

Decrement operator:
x--
5
x
4
--x
3

Unary negation: return the nagation of its operand
x = 3 
-x
-3
Unary plus: convert its operand to a number if not already 
X = 3
+3
3
+"3"
3
+true
1
+false
0

4. Concatenation operator or the plus:
That can be apllied to a string
Ex. 
x="Hello"
y="world!"
x+y
"Hello world!"
x+="hello!"
"Hello hello!"
"32" + "3232"
"323232"

-----------------------
2.6 If/Else Statements
-----------------------

Allows to execute various blocks of code if a specific condition is met.

if(condition)

if(this consition is not met) {} else {then we do this}

Ternary Operator or conditional operator:
It's a special case because it's only a JavaScript operator that takes three operates
